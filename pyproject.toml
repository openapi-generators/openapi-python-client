# This fork of openapi-python-client is published internally at Benchling. Changes in this
# project file will *not* be contributed upstream.

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "benchling-openapi-python-client"
version = "2.0.0-alpha.2"
description = "Generate modern Python clients from OpenAPI - Benchling fork"
repository = "https://github.com/benchling/openapi-python-client"
license = "MIT"
keywords=["OpenAPI", "Client", "Generator"]
authors = [
    "Dylan Anthony <danthony@triaxtec.com>",
    "Benchling Support <support@benchling.com>",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Code Generators",
    "Typing :: Typed",
]
readme = "README.md"
packages = [
    {include = "openapi_python_client"},
    # Note that the module name is different from the package name, so that we can
    # transparently switch between the upstream package and this one in our projects.
]
include = [
    "CHANGELOG.md",
    "openapi_python_client/py.typed",
]
exclude = [
    ".gitignore",
]

[tool.poetry.dependencies]
python = "^3.9"
jinja2 = ">=3.0.0,<4.0.0"
typer = ">0.6,<0.13"
colorama = {version = ">=0.4.3", markers = "sys_platform == 'win32'"}
shellingham = ">=1.3.2,<2.0.0"
pydantic = ">=2.1.1,<3.0.0"
attrs = ">=22.2.0"
python-dateutil = ">=2.8.1,<3.0.0"
httpx = ">=0.20.0,<0.28.0"
"ruamel.yaml" = ">=0.18.6,<0.19.0"
ruff = ">=0.2,<0.8"
typing-extensions = ">=4.8.0,<5.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "*"
pytest-mock = "*"
mypy = "*"
pytest-cov = "*"
python-multipart = "*"
types-PyYAML = ">=6.0.3,<7.0.0"
types-certifi = "<2021.10.9,>=2020.0.0"
types-python-dateutil = "<3.0.0,>=2.0.0"
ruamel-yaml-string = ">=0.1.1"
syrupy = ">=4"
taskipy = "^1.14.0"
python-dotenv = "^1.0.1"

[tool.poetry.scripts]
openapi-python-client = "openapi_python_client.cli:app"

[tool.ruff]
line-length = 120
exclude = [
    ".git",
    ".mypy_cache",
    ".venv",
    "openapi_python_client/templates/*",
    "end_to_end_tests/*",
    "tests/test_templates/*",
]

[tool.ruff.lint]
select = ["E", "F", "I", "UP", "B", "PL", "RUF"]
ignore = ["E501", "PLR0913", "PLR2004"]

[tool.ruff.lint.per-file-ignores]
"openapi_python_client/cli.py" = ["B008"]
"tests/*" = ["PLR2004"]

[tool.coverage.run]
omit = ["openapi_python_client/__main__.py", "openapi_python_client/templates/*", "end_to_end_tests/*", "integration_tests/*", "tests/*"]

[tool.mypy]
plugins = ["pydantic.mypy"]
disallow_any_generics = true
disallow_untyped_defs = true
warn_redundant_casts = true
strict_equality = true
exclude = [
    # For unknown reasons, mypy complains about this file but doesn't complain in the upstream repo
    "openapi_python_client/schema/openapi_schema_pydantic/schema.py",
]

[[tool.mypy.overrides]]
module = [
    "importlib_metadata",
    "typer",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
junit_family = "xunit2"

[tool.taskipy.tasks]
lint = "ruff check --fix ."
format = "ruff format ."
mypy = "mypy openapi_python_client"  # note, currently test code is excluded from type checking
check = "task lint && task format && task mypy && task test"
regen = "task regen_e2e && task regen_integration"
e2e = "pytest openapi_python_client end_to_end_tests/test_end_to_end.py"
re = "task regen_e2e && task e2e --snapshot-update"
regen_e2e = "python -m end_to_end_tests.regen_golden_record"
unit = "pytest tests"
test = "pytest tests end_to_end_tests/test_end_to_end.py end_to_end_tests/functional_tests --basetemp=tests/tmp"
post_test = "rm -r tests/tmp"
test_with_coverage = "dotenv -f tests/.env run task test --cov openapi_python_client tests --cov-report=term-missing"
regen_integration = """
openapi-python-client generate --overwrite --url https://raw.githubusercontent.com/openapi-generators/openapi-test-server/main/openapi.json --config integration-tests/config.yaml --meta none --output-path integration-tests/integration_tests \
"""
