{
  "openapi": "3.0.2",
  "info": {
    "title": "My Test API",
    "description": "An API for testing openapi-python-client",
    "version": "0.1.0"
  },
  "paths": {
    "/tests/": {
      "get": {
        "tags": [
          "tests"
        ],
        "summary": "Get List",
        "description": "Get a list of things ",
        "operationId": "getUserList",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "An Enum Value",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AnEnum"
              }
            },
            "name": "an_enum_value",
            "in": "query"
          },
          {
            "required": true,
            "schema": {
              "title": "Some Date",
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "string",
                  "format": "date-time"
                }
              ]
            },
            "name": "some_date",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get List Tests  Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AModel"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tests/basic_lists/strings": {
      "get": {
        "tags": [
          "tests"
        ],
        "summary": "Get Basic List Of Strings",
        "description": "Get a list of strings ",
        "operationId": "getBasicListOfStrings",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Basic List Of Strings Tests Basic Lists Strings Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tests/basic_lists/integers": {
      "get": {
        "tags": [
          "tests"
        ],
        "summary": "Get Basic List Of Integers",
        "description": "Get a list of integers ",
        "operationId": "getBasicListOfIntegers",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Basic List Of Integers Tests Basic Lists Integers Get",
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tests/basic_lists/floats": {
      "get": {
        "tags": [
          "tests"
        ],
        "summary": "Get Basic List Of Floats",
        "description": "Get a list of floats ",
        "operationId": "getBasicListOfFloats",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Basic List Of Floats Tests Basic Lists Floats Get",
                  "type": "array",
                  "items": {
                    "type": "number"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tests/basic_lists/booleans": {
      "get": {
        "tags": [
          "tests"
        ],
        "summary": "Get Basic List Of Booleans",
        "description": "Get a list of booleans ",
        "operationId": "getBasicListOfBooleans",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Basic List Of Booleans Tests Basic Lists Booleans Get",
                  "type": "array",
                  "items": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tests/upload": {
      "post": {
        "tags": [
          "tests"
        ],
        "summary": "Upload File",
        "description": "Upload a file ",
        "operationId": "upload_file_tests_upload_post",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Keep-Alive",
              "type": "boolean"
            },
            "name": "keep-alive",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_file_tests_upload_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tests/json_body": {
      "post": {
        "tags": [
          "tests"
        ],
        "summary": "Json Body",
        "description": "Try sending a JSON body ",
        "operationId": "json_body_tests_json_body_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tests/defaults": {
      "post": {
        "tags": [
          "tests"
        ],
        "summary": "Defaults",
        "operationId": "defaults_tests_defaults_post",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "String Prop",
              "type": "string",
              "default": "the default string"
            },
            "name": "string_prop",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Datetime Prop",
              "type": "string",
              "format": "date-time",
              "default": "1010-10-10T00:00:00"
            },
            "name": "datetime_prop",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Date Prop",
              "type": "string",
              "format": "date",
              "default": "1010-10-10"
            },
            "name": "date_prop",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Float Prop",
              "type": "number",
              "default": 3.14
            },
            "name": "float_prop",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Int Prop",
              "type": "integer",
              "default": 7
            },
            "name": "int_prop",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Boolean Prop",
              "type": "boolean",
              "default": false
            },
            "name": "boolean_prop",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "List Prop",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AnEnum"
              },
              "default": [
                "FIRST_VALUE",
                "SECOND_VALUE"
              ]
            },
            "name": "list_prop",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Union Prop",
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "string"
                }
              ],
              "default": "not a float"
            },
            "name": "union_prop",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Union Prop With Ref",
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "$ref": "#/components/schemas/AnEnum"
                }
              ],
              "default": 0.6
            },
            "name": "union_prop_with_ref",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/AnEnum"
            },
            "name": "enum_prop",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tests/octet_stream": {
      "get": {
        "tags": [
          "tests"
        ],
        "summary": "Octet Stream",
        "operationId": "octet_stream_tests_octet_stream_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/tests/no_response": {
      "get": {
        "tags": [
          "tests"
        ],
        "summary": "No Response",
        "operationId": "no_response_tests_no_response_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/tests/unsupported_content": {
      "get": {
        "tags": [
          "tests"
        ],
        "summary": "Unsupported Content",
        "operationId": "unsupported_content_tests_unsupported_content_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              },
              "not_real/content-type": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/tests/int_enum": {
      "post": {
        "tags": [
          "tests"
        ],
        "summary": "Int Enum",
        "operationId": "int_enum_tests_int_enum_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/AnIntEnum"
            },
            "name": "int_enum",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tests/inline_objects": {
      "post": {
        "tags": [
          "tests"
        ],
        "summary": "Test Inline Objects",
        "operationId": "test_inline_objects",
        "requestBody": {
          "description": "An inline body object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "a_property": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Inline object response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "a_property": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/tests/optional_query_param/": {
      "get": {
        "tags": [
          "tests"
        ],
        "summary": "Optional Query Params test",
        "description": "Test optional query parameters",
        "operationId": "optional_value_tests_optional_query_param",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Query Param",
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": [
                "string1",
                "string2"
              ]
            },
            "name": "query_param",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AModel": {
        "title": "AModel",
        "required": ["an_enum_value", "aCamelDateTime", "a_date", "a_nullable_date", "required_nullable", "required_not_nullable"],
        "type": "object",
        "properties": {
          "an_enum_value": {
            "$ref": "#/components/schemas/AnEnum"
          },
          "nested_list_of_enums": {
            "title": "Nested List Of Enums",
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/DifferentEnum"
              }
            },
            "default": []
          },
          "aCamelDateTime": {
            "title": "Acameldatetime",
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string",
                "format": "date"
              }
            ]
          },
          "a_date": {
            "title": "A Date",
            "type": "string",
            "format": "date"
          },
          "a_nullable_date": {
            "title": "A Nullable Date",
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "1_leading_digit": {
            "title": "Leading Digit",
            "type": "string"
          },
          "required_nullable": {
            "title": "Required AND Nullable",
            "type": "string",
            "nullable": true
          },
          "required_not_nullable": {
            "title": "Required NOT Nullable",
            "type": "string",
            "nullable": false
          },
          "not_required_nullable": {
            "title": "NOT Required AND nullable",
            "type": "string",
            "nullable": true
          },
          "not_required_not_nullable": {
            "title": "NOT Required AND NOT Nullable",
            "type": "string",
            "nullable": false
          }
        },
        "description": "A Model for testing all the ways custom objects can be used ",
        "additionalProperties": false
      },
      "AnEnum": {
        "title": "AnEnum",
        "enum": ["FIRST_VALUE", "SECOND_VALUE"],
        "description": "For testing Enums in all the ways they can be used "
      },
      "AnIntEnum": {
        "title": "AnIntEnum",
        "enum": [-1, 1, 2],
        "type": "integer",
        "description": "An enumeration."
      },
      "Body_upload_file_tests_upload_post": {
        "title": "Body_upload_file_tests_upload_post",
        "required": ["some_file"],
        "type": "object",
        "properties": {
          "some_file": {
            "title": "Some File",
            "type": "string",
            "format": "binary"
          }
        },
        "additionalProperties": false
      },
      "DifferentEnum": {
        "title": "DifferentEnum",
        "enum": ["DIFFERENT", "OTHER"],
        "description": "An enumeration."
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        },
        "additionalProperties": false
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": ["loc", "msg", "type"],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ModelWithUnionProperty": {
        "title": "ModelWithUnionProperty",
        "type": "object",
        "properties": {
          "a_property": {
            "oneOf": [
              {"$ref": "#/components/schemas/AnEnum"},
              {"$ref": "#/components/schemas/AnIntEnum"}
            ]
          }
        },
        "additionalProperties": false
      },
      "FreeFormModel": {
        "title": "FreeFormModel",
        "type": "object"
      },
      "ModelWithAdditionalPropertiesInlined": {
        "title": "ModelWithAdditionalPropertiesInlined",
        "type": "object",
        "properties": {
          "a_number": {
            "type": "number"
          }
        },
        "additionalProperties": {
          "type": "object",
          "properties": {
            "extra_props_prop": {"type": "string"}
          },
          "additionalProperties": {}
        }
      },
      "ModelWithPrimitiveAdditionalProperties": {
        "title": "ModelWithPrimitiveAdditionalProperties",
        "type": "object",
        "properties": {
          "a_date_holder": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "additionalProperties": {
          "type": "string"
        }
      },
      "ModelWithAdditionalPropertiesRefed": {
        "title": "ModelWithAdditionalPropertiesRefed",
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/AnEnum"
        }
      }
    }
  }
}
