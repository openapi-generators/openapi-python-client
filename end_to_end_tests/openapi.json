{
  "openapi": "3.0.2",
  "info": {
    "title": "My Test API",
    "description": "An API for testing openapi-python-client",
    "version": "0.1.0"
  },
  "paths": {
    "/tests/": {
      "get": {
        "tags": [
          "tests"
        ],
        "summary": "Get List",
        "description": "Get a list of things ",
        "operationId": "getUserList",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "An Enum Value",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AnEnum"
              }
            },
            "name": "an_enum_value",
            "in": "query"
          },
          {
            "required": true,
            "schema": {
              "title": "Some Date",
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "string",
                  "format": "date-time"
                }
              ]
            },
            "name": "some_date",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get List Tests  Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AModel"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "423": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tests/basic_lists/strings": {
      "get": {
        "tags": [
          "tests"
        ],
        "summary": "Get Basic List Of Strings",
        "description": "Get a list of strings ",
        "operationId": "getBasicListOfStrings",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Basic List Of Strings Tests Basic Lists Strings Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tests/basic_lists/integers": {
      "get": {
        "tags": [
          "tests"
        ],
        "summary": "Get Basic List Of Integers",
        "description": "Get a list of integers ",
        "operationId": "getBasicListOfIntegers",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Basic List Of Integers Tests Basic Lists Integers Get",
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tests/basic_lists/floats": {
      "get": {
        "tags": [
          "tests"
        ],
        "summary": "Get Basic List Of Floats",
        "description": "Get a list of floats ",
        "operationId": "getBasicListOfFloats",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Basic List Of Floats Tests Basic Lists Floats Get",
                  "type": "array",
                  "items": {
                    "type": "number"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tests/basic_lists/booleans": {
      "get": {
        "tags": [
          "tests"
        ],
        "summary": "Get Basic List Of Booleans",
        "description": "Get a list of booleans ",
        "operationId": "getBasicListOfBooleans",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Basic List Of Booleans Tests Basic Lists Booleans Get",
                  "type": "array",
                  "items": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tests/post_form_data": {
      "post": {
        "tags": [
          "tests"
        ],
        "sumnary": "Post from data",
        "description": "Post form data",
        "operationId": "post_form_data",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/AFormData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/tests/upload": {
      "post": {
        "tags": [
          "tests"
        ],
        "summary": "Upload File",
        "description": "Upload a file ",
        "operationId": "upload_file_tests_upload_post",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Keep-Alive",
              "type": "boolean"
            },
            "name": "keep-alive",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_file_tests_upload_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tests/json_body": {
      "post": {
        "tags": [
          "tests"
        ],
        "summary": "Json Body",
        "description": "Try sending a JSON body ",
        "operationId": "json_body_tests_json_body_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tests/defaults": {
      "post": {
        "tags": [
          "tests"
        ],
        "summary": "Defaults",
        "operationId": "defaults_tests_defaults_post",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "String Prop",
              "type": "string",
              "default": "the default string"
            },
            "name": "string_prop",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Not Required, Not Nullable Datetime Prop",
              "nullable": false,
              "type": "string",
              "format": "date-time",
              "default": "1010-10-10T00:00:00"
            },
            "name": "not_required_not_nullable_datetime_prop",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Not Required, Nullable Datetime Prop",
              "nullable": true,
              "type": "string",
              "format": "date-time",
              "default": "1010-10-10T00:00:00"
            },
            "name": "not_required_nullable_datetime_prop",
            "in": "query"
          },
          {
            "required": true,
            "schema": {
              "title": "Required, Not Nullable Datetime Prop",
              "nullable": false,
              "type": "string",
              "format": "date-time",
              "default": "1010-10-10T00:00:00"
            },
            "name": "required_not_nullable_datetime_prop",
            "in": "query"
          },
          {
            "required": true,
            "schema": {
              "title": "Required, Nullable Datetime Prop",
              "nullable": true,
              "type": "string",
              "format": "date-time",
              "default": "1010-10-10T00:00:00"
            },
            "name": "required_nullable_datetime_prop",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Date Prop",
              "type": "string",
              "format": "date",
              "default": "1010-10-10"
            },
            "name": "date_prop",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Float Prop",
              "type": "number",
              "default": 3.14
            },
            "name": "float_prop",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Int Prop",
              "type": "integer",
              "default": 7
            },
            "name": "int_prop",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Boolean Prop",
              "type": "boolean",
              "default": false
            },
            "name": "boolean_prop",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "List Prop",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AnEnum"
              },
              "default": [
                "FIRST_VALUE",
                "SECOND_VALUE"
              ]
            },
            "name": "list_prop",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Union Prop",
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "string"
                }
              ],
              "default": "not a float"
            },
            "name": "union_prop",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Union Prop With Ref",
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "$ref": "#/components/schemas/AnEnum"
                }
              ],
              "default": 0.6
            },
            "name": "union_prop_with_ref",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/AnEnum"
            },
            "name": "enum_prop",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ModelWithUnionProperty"
            },
            "name": "model_prop",
            "in": "query"
          },
          {
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ModelWithUnionProperty"
            },
            "name": "required_model_prop",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ModelWithUnionProperty"
                }
              ],
              "nullable": true
            },
            "name": "nullable_model_prop",
            "in": "query"
          },
          {
            "required": true,
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ModelWithUnionProperty"
                }
              ],
              "nullable": true
            },
            "name": "nullable_required_model_prop",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tests/octet_stream": {
      "get": {
        "tags": [
          "tests"
        ],
        "summary": "Octet Stream",
        "operationId": "octet_stream_tests_octet_stream_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/tests/no_response": {
      "get": {
        "tags": [
          "tests"
        ],
        "summary": "No Response",
        "operationId": "no_response_tests_no_response_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/tests/unsupported_content": {
      "get": {
        "tags": [
          "tests"
        ],
        "summary": "Unsupported Content",
        "operationId": "unsupported_content_tests_unsupported_content_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              },
              "not_real/content-type": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/tests/int_enum": {
      "post": {
        "tags": [
          "tests"
        ],
        "summary": "Int Enum",
        "operationId": "int_enum_tests_int_enum_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/AnIntEnum"
            },
            "name": "int_enum",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tests/inline_objects": {
      "post": {
        "tags": [
          "tests"
        ],
        "summary": "Test Inline Objects",
        "operationId": "test_inline_objects",
        "requestBody": {
          "description": "An inline body object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "a_property": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Inline object response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "a_property": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/tests/optional_query_param/": {
      "get": {
        "tags": [
          "tests"
        ],
        "summary": "Optional Query Params test",
        "description": "Test optional query parameters",
        "operationId": "optional_value_tests_optional_query_param",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Query Param",
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": [
                "string1",
                "string2"
              ]
            },
            "name": "query_param",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/token_with_cookie": {
      "get": {
        "tags": [
          "tests"
        ],
        "summary": "TOKEN_WITH_COOKIE",
        "description": "Test optional cookie parameters",
        "operationId": "token_with_cookie_auth_token_with_cookie_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Token",
              "type": "string"
            },
            "name": "MyToken",
            "in": "cookie"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/common_parameters": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "common",
          "in": "query"
        }
      ],
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/same-name-multiple-locations/{param}": {
      "description": "Test that if you have a property of the same name in multiple locations, it produces valid code",
      "get": {
        "tags": [
          "parameters"
        ],
        "parameters": [
          {
            "name": "param",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "param",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AFormData": {
        "type": "object",
        "properties": {
          "an_optional_field": {
            "type": "string"
          },
          "an_required_field": {
            "type": "string"
          }
        },
        "required": [
          "an_required_field"
        ]
      },
      "AModel": {
        "title": "AModel",
        "required": [
          "an_enum_value",
          "an_allof_enum_with_overridden_default",
          "aCamelDateTime",
          "a_date",
          "a_nullable_date",
          "required_nullable",
          "required_not_nullable",
          "model",
          "nullable_model",
          "one_of_models",
          "nullable_one_of_models"
        ],
        "type": "object",
        "properties": {
          "an_enum_value": {
            "$ref": "#/components/schemas/AnEnum"
          },
          "an_allof_enum_with_overridden_default": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AnAllOfEnum"
              }
            ],
            "default": "overridden_default"
          },
          "an_optional_allof_enum": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AnAllOfEnum"
              }
            ]
          },
          "nested_list_of_enums": {
            "title": "Nested List Of Enums",
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/DifferentEnum"
              }
            },
            "default": []
          },
          "aCamelDateTime": {
            "title": "Acameldatetime",
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string",
                "format": "date"
              }
            ]
          },
          "a_date": {
            "title": "A Date",
            "type": "string",
            "format": "date"
          },
          "a_nullable_date": {
            "title": "A Nullable Date",
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "a_not_required_date": {
            "title": "A Nullable Date",
            "type": "string",
            "format": "date"
          },
          "1_leading_digit": {
            "title": "Leading Digit",
            "type": "string"
          },
          "required_nullable": {
            "title": "Required AND Nullable",
            "type": "string",
            "nullable": true
          },
          "required_not_nullable": {
            "title": "Required NOT Nullable",
            "type": "string",
            "nullable": false
          },
          "not_required_nullable": {
            "title": "NOT Required AND nullable",
            "type": "string",
            "nullable": true
          },
          "not_required_not_nullable": {
            "title": "NOT Required AND NOT Nullable",
            "type": "string",
            "nullable": false
          },
          "one_of_models": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeFormModel"
              },
              {
                "$ref": "#/components/schemas/ModelWithUnionProperty"
              }
            ],
            "nullable": false
          },
          "nullable_one_of_models": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeFormModel"
              },
              {
                "$ref": "#/components/schemas/ModelWithUnionProperty"
              }
            ],
            "nullable": true
          },
          "not_required_one_of_models": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeFormModel"
              },
              {
                "$ref": "#/components/schemas/ModelWithUnionProperty"
              }
            ],
            "nullable": false
          },
          "not_required_nullable_one_of_models": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FreeFormModel"
              },
              {
                "$ref": "#/components/schemas/ModelWithUnionProperty"
              },
              {
                "type": "string"
              }
            ],
            "nullable": true
          },
          "model": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ModelWithUnionProperty"
              }
            ],
            "nullable": false
          },
          "nullable_model": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ModelWithUnionProperty"
              }
            ],
            "nullable": true
          },
          "not_required_model": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ModelWithUnionProperty"
              }
            ],
            "nullable": false
          },
          "not_required_nullable_model": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ModelWithUnionProperty"
              }
            ],
            "nullable": true
          }
        },
        "description": "A Model for testing all the ways custom objects can be used ",
        "additionalProperties": false
      },
      "AnEnum": {
        "title": "AnEnum",
        "enum": [
          "FIRST_VALUE",
          "SECOND_VALUE"
        ],
        "description": "For testing Enums in all the ways they can be used "
      },
      "AnAllOfEnum": {
        "title": "AnAllOfEnum",
        "enum": [
          "foo",
          "bar",
          "a_default",
          "overridden_default"
        ],
        "default": "a_default"
      },
      "AnIntEnum": {
        "title": "AnIntEnum",
        "enum": [
          -1,
          1,
          2
        ],
        "type": "integer",
        "description": "An enumeration."
      },
      "Body_upload_file_tests_upload_post": {
        "title": "Body_upload_file_tests_upload_post",
        "required": ["some_file", "some_object", "some_nullable_object"],
        "type": "object",
        "properties": {
          "some_file": {
            "title": "Some File",
            "type": "string",
            "format": "binary"
          },
          "some_optional_file": {
            "title": "Some Optional File",
            "type": "string",
            "format": "binary"
          },
          "some_string": {
            "title": "Some String",
            "type": "string",
            "default": "some_default_string"
          },
          "some_number": {
            "title": "Some Number",
            "type": "number"
          },
          "some_array": {
            "title": "Some Array",
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "some_object": {
            "title": "Some Object",
            "type": "object",
            "required": ["num", "text"],
            "properties": {
              "num": {
                "type": "number"
              },
              "text": {
                "type": "string"
              }
            }
          },
          "some_optional_object": {
            "title": "Some Optional Object",
            "type": "object",
            "required": ["foo"],
            "properties": {
              "foo": {
                "type": "string"
              }
            }
          },
          "some_nullable_object": {
            "title": "Some Nullable Object",
            "type": "object",
            "nullable": true,
            "properties": {
              "bar": {
                "type": "string"
              }
            }
          },
          "some_enum": {
            "$ref": "#/components/schemas/DifferentEnum"
          }
        },
        "additionalProperties": {
          "type": "object",
          "properties": {
            "foo": {
              "type": "string"
            }
          }
        }
      },
      "DifferentEnum": {
        "title": "DifferentEnum",
        "enum": [
          "DIFFERENT",
          "OTHER"
        ],
        "description": "An enumeration."
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        },
        "additionalProperties": false
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ModelWithUnionProperty": {
        "title": "ModelWithUnionProperty",
        "type": "object",
        "properties": {
          "a_property": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AnEnum"
              },
              {
                "$ref": "#/components/schemas/AnIntEnum"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "ModelWithUnionPropertyInlined": {
        "title": "ModelWithUnionPropertyInlined",
        "type": "object",
        "properties": {
          "fruit": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "apples": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "bananas": {
                    "type": "string"
                  }
                }
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "FreeFormModel": {
        "title": "FreeFormModel",
        "type": "object"
      },
      "ModelWithAdditionalPropertiesInlined": {
        "type": "object",
        "properties": {
          "a_number": {
            "type": "number"
          }
        },
        "additionalProperties": {
          "type": "object",
          "properties": {
            "extra_props_prop": {
              "type": "string"
            }
          },
          "additionalProperties": {}
        }
      },
      "ModelWithPrimitiveAdditionalProperties": {
        "title": "ModelWithPrimitiveAdditionalProperties",
        "type": "object",
        "properties": {
          "a_date_holder": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "additionalProperties": {
          "type": "string"
        }
      },
      "ModelWithAdditionalPropertiesRefed": {
        "title": "ModelWithAdditionalPropertiesRefed",
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/AnEnum"
        }
      },
      "ModelWithAnyJsonProperties": {
        "title": "ModelWithAnyJsonProperties",
        "type": "object",
        "additionalProperties": {
          "anyOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "type": "string"
            },
            {
              "type": "number"
            },
            {
              "type": "integer"
            },
            {
              "type": "boolean"
            }
          ]
        }
      },
      "ModelFromAllOf": {
        "title": "ModelFromAllOf",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/AllOfSubModel"
          },
          {
            "$ref": "#/components/schemas/AnotherAllOfSubModel"
          }
        ]
      },
      "AllOfSubModel": {
        "title": "AllOfSubModel",
        "type": "object",
        "properties": {
          "a_sub_property": {
            "type": "string"
          }
        }
      },
      "AnotherAllOfSubModel": {
        "title": "AnotherAllOfSubModel",
        "type": "object",
        "properties": {
          "another_sub_property": {
            "type": "string"
          }
        }
      },
      "model_reference_doesnt_match": {
        "title": "ModelName",
        "type": "object"
      },
      "ModelWithPropertyRef": {
        "type": "object",
        "properties": {
          "inner": {
            "$ref": "#/components/schemas/model_reference_doesnt_match"
          }
        }
      },
      "AModelWithPropertiesReferenceThatAreNotObject": {
        "type": "object",
        "required": [
          "enum_properties_ref",
          "str_properties_ref",
          "date_properties_ref",
          "datetime_properties_ref",
          "int32_properties_ref",
          "int64_properties_ref",
          "float_properties_ref",
          "double_properties_ref",
          "file_properties_ref",
          "bytestream_properties_ref",
          "enum_properties",
          "str_properties",
          "date_properties",
          "datetime_properties",
          "int32_properties",
          "int64_properties",
          "float_properties",
          "double_properties",
          "file_properties",
          "bytestream_properties",
          "enum_property_ref",
          "str_property_ref",
          "date_property_ref",
          "datetime_property_ref",
          "int32_property_ref",
          "int64_property_ref",
          "float_property_ref",
          "double_property_ref",
          "file_property_ref",
          "bytestream_property_ref"
        ],
        "properties": {
          "enum_properties_ref": {
            "$ref": "#/components/schemas/AnOtherArrayOfEnum"
          },
          "str_properties_ref": {
            "$ref": "#/components/schemas/AnOtherArrayOfString"
          },
          "date_properties_ref": {
            "$ref": "#/components/schemas/AnOtherArrayOfDate"
          },
          "datetime_properties_ref": {
            "$ref": "#/components/schemas/AnOtherArrayOfDateTime"
          },
          "int32_properties_ref": {
            "$ref": "#/components/schemas/AnOtherArrayOfInt32"
          },
          "int64_properties_ref": {
            "$ref": "#/components/schemas/AnOtherArrayOfInt64"
          },
          "float_properties_ref": {
            "$ref": "#/components/schemas/AnOtherArrayOfFloat"
          },
          "double_properties_ref": {
            "$ref": "#/components/schemas/AnOtherArrayOfDouble"
          },
          "file_properties_ref": {
            "$ref": "#/components/schemas/AnOtherArrayOfFile"
          },
          "bytestream_properties_ref": {
            "$ref": "#/components/schemas/AnOtherArrayOfByteStream"
          },
          "enum_properties": {
            "$ref": "#/components/schemas/AnArrayOfEnum"
          },
          "str_properties": {
            "$ref": "#/components/schemas/AnArrayOfString"
          },
          "date_properties": {
            "$ref": "#/components/schemas/AnArrayOfDate"
          },
          "datetime_properties": {
            "$ref": "#/components/schemas/AnArrayOfDateTime"
          },
          "int32_properties": {
            "$ref": "#/components/schemas/AnArrayOfInt32"
          },
          "int64_properties": {
            "$ref": "#/components/schemas/AnArrayOfInt64"
          },
          "float_properties": {
            "$ref": "#/components/schemas/AnArrayOfFloat"
          },
          "double_properties": {
            "$ref": "#/components/schemas/AnArrayOfDouble"
          },
          "file_properties": {
            "$ref": "#/components/schemas/AnArrayOfFile"
          },
          "bytestream_properties": {
            "$ref": "#/components/schemas/AnArrayOfByteStream"
          },
          "enum_property_ref": {
            "$ref": "#/components/schemas/AnEnum"
          },
          "str_property_ref": {
            "$ref": "#/components/schemas/AString"
          },
          "date_property_ref": {
            "$ref": "#/components/schemas/ADate"
          },
          "datetime_property_ref": {
            "$ref": "#/components/schemas/ADateTime"
          },
          "int32_property_ref": {
            "$ref": "#/components/schemas/AnInt32"
          },
          "int64_property_ref": {
            "$ref": "#/components/schemas/AnInt64"
          },
          "float_property_ref": {
            "$ref": "#/components/schemas/AFloat"
          },
          "double_property_ref": {
            "$ref": "#/components/schemas/ADouble"
          },
          "file_property_ref": {
            "$ref": "#/components/schemas/AFile"
          },
          "bytestream_property_ref": {
            "$ref": "#/components/schemas/AByteStream"
          }
        }
      },
      "AnArrayOfEnum": {
        "type": "array",
        "items": {
          "title": "AnEnum",
          "enum": [
            "FIRST_VALUE",
            "SECOND_VALUE"
          ],
          "description": "For testing Enums in all the ways they can be used "
        }
      },
      "AnOtherArrayOfEnum": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AnEnum"
        }
      },
      "AnArrayOfString": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "AnOtherArrayOfString": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AString"
        }
      },
      "AString": {
        "type": "string",
        "pattern": "^helloworld.*"
      },
      "AnArrayOfDate": {
        "type": "array",
        "items": {
          "type": "string",
          "format": "date"
        }
      },
      "AnOtherArrayOfDate": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ADate"
        }
      },
      "ADate": {
        "type": "string",
        "format": "date"
      },
      "AnArrayOfDateTime": {
        "type": "array",
        "items": {
          "type": "string",
          "format": "date-time"
        }
      },
      "AnOtherArrayOfDateTime": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ADateTime"
        }
      },
      "ADateTime": {
        "type": "string",
        "format": "date-time"
      },
      "AnArrayOfInt32": {
        "type": "array",
        "items": {
          "type": "integer",
          "format": "int32"
        }
      },
      "AnOtherArrayOfInt32": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AnInt32"
        }
      },
      "AnInt32": {
        "type": "integer",
        "format": "int32"
      },
      "AnArrayOfInt64": {
        "type": "array",
        "items": {
          "type": "integer",
          "format": "int64"
        }
      },
      "AnOtherArrayOfInt64": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AnInt64"
        }
      },
      "AnInt64": {
        "type": "integer",
        "format": "int64"
      },
      "AnArrayOfFloat": {
        "type": "array",
        "items": {
          "type": "number",
          "format": "float"
        }
      },
      "AnOtherArrayOfFloat": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AFloat"
        }
      },
      "AFloat": {
        "type": "number",
        "format": "float"
      },
      "AnArrayOfDouble": {
        "type": "array",
        "items": {
          "type": "number",
          "format": "float"
        }
      },
      "AnOtherArrayOfDouble": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ADouble"
        }
      },
      "ADouble": {
        "type": "number",
        "format": "double"
      },
      "AnArrayOfFile": {
        "type": "array",
        "items": {
          "type": "string",
          "format": "binary"
        }
      },
      "AnOtherArrayOfFile": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AFile"
        }
      },
      "AFile": {
        "type": "string",
        "format": "binary"
      },
      "AnArrayOfByteStream": {
        "type": "array",
        "items": {
          "type": "string",
          "format": "byte"
        }
      },
      "AnOtherArrayOfByteStream": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AByteStream"
        }
      },
      "AByteStream": {
        "type": "string",
        "format": "byte"
      }
    }
  }
}
